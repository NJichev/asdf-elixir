#!/usr/bin/env bash

install_elixir() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t elixir_build_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  # path to the tar file
  local source_path=$(get_download_file_path $install_type $version $tmp_download_dir)
  echo $source_path
  download_source_file $install_type $version $source_path

  # running this in a subshell
  # we don't want to disturb current working dir
  (
    if [ "$install_type" != "version" ]; then
      tar zxf $source_path -C $install_path --strip-components=1 || exit 1
      cd $install_path
      make clean test

      if [ $? -ne 0 ]; then
        rm -rf $install_path
        exit 1
      fi
    else
      if ! type "unzip" &> /dev/null; then
        echo "ERROR: unzip not found"
        exit 1
      fi

      unzip -q $source_path -d $install_path || exit 1
    fi

    mkdir -p $install_path/.mix/archives
  )
}


download_source_file() {
  local install_type=$1
  local version=$2
  local download_path=$3
  local download_url=$(get_download_url $install_type $version)

  curl -Lo $download_path -C - $download_url
}


get_download_file_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3

  if [ "$install_type" = "version" ]; then
    local pkg_name="elixir-precompiled-${version}.zip"
  else
    local pkg_name="elixir-${install_type}-${version}-src.tar.gz"
  fi

  echo "$tmp_download_dir/$pkg_name"
}


get_download_url() {
  local install_type=$1
  local version=$2

  if [ "$install_type" = "version" ]
  then
    if [[ "$version" =~ ^[0-9]+\.* ]] ; then
       # if version is a release number, prepend v
       echo "https://repo.hex.pm/builds/elixir/v${version}.zip"
    else
       # otherwise it can be a branch name or commit sha
       echo "https://repo.hex.pm/builds/elixir/${version}.zip"
    fi
  else
    echo "https://github.com/elixir-lang/elixir/archive/${version}.tar.gz"
  fi
}

install_default_elixir_packages() {
  local default_elixir_packages="${HOME}/.default-elixir-packages"

  if [ ! -f $default_elixir_packages ]; then return; fi

  for name in $(cat $default_elixir_packages); do
    echo -ne "\nInstalling \e[33m${name}\e[39m package... "

    if [ "$name" = "hex" ]; then
      mix local.hex
      continue
    fi

    if mix archive.install $name > /dev/null 2>&1; then
      echo -e "\e[32mSUCCESS\e[39m"
    else
      echo -e "\e[31mFAIL\e[39m"
    fi
  done
}

install_elixir $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
install_default_elixir_packages
